name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        go-version: [ '1.23', '1.24' ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: go mod tidy && go mod verify

    - name: Install golangci-lint
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.go-version == '1.24' }}
      run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

    - name: Install gosec
      run: go install github.com/securego/gosec/v2/cmd/gosec@latest

    - name: Run linter
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.go-version == '1.24' }}
      run: golangci-lint run

    - name: Run tests with coverage
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Run tests
      if: ${{ matrix.os != 'ubuntu-latest' }}
      run: go test -v -race ./...

    - name: Run security check
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: gosec ./...

    - name: Build
      run: go build -v ./...
